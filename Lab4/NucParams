class NucParams:
    rnaCodonTable = {
    # RNA codon table
    # U
    'UUU': 'F', 'UCU': 'S', 'UAU': 'Y', 'UGU': 'C',  # UxU
    'UUC': 'F', 'UCC': 'S', 'UAC': 'Y', 'UGC': 'C',  # UxC
    'UUA': 'L', 'UCA': 'S', 'UAA': '-', 'UGA': '-',  # UxA
    'UUG': 'L', 'UCG': 'S', 'UAG': '-', 'UGG': 'W',  # UxG
    # C
    'CUU': 'L', 'CCU': 'P', 'CAU': 'H', 'CGU': 'R',  # CxU
    'CUC': 'L', 'CCC': 'P', 'CAC': 'H', 'CGC': 'R',  # CxC
    'CUA': 'L', 'CCA': 'P', 'CAA': 'Q', 'CGA': 'R',  # CxA
    'CUG': 'L', 'CCG': 'P', 'CAG': 'Q', 'CGG': 'R',  # CxG
    # A
    'AUU': 'I', 'ACU': 'T', 'AAU': 'N', 'AGU': 'S',  # AxU
    'AUC': 'I', 'ACC': 'T', 'AAC': 'N', 'AGC': 'S',  # AxC
    'AUA': 'I', 'ACA': 'T', 'AAA': 'K', 'AGA': 'R',  # AxA
    'AUG': 'M', 'ACG': 'T', 'AAG': 'K', 'AGG': 'R',  # AxG
    # G
    'GUU': 'V', 'GCU': 'A', 'GAU': 'D', 'GGU': 'G',  # GxU
    'GUC': 'V', 'GCC': 'A', 'GAC': 'D', 'GGC': 'G',  # GxC
    'GUA': 'V', 'GCA': 'A', 'GAA': 'E', 'GGA': 'G',  # GxA
    'GUG': 'V', 'GCG': 'A', 'GAG': 'E', 'GGG': 'G'  # GxG
    }
    dnaCodonTable = {key.replace('U','T'):value for key, value in rnaCodonTable.items()}

    def __init__ (self, inString='', inSeq): 
        """took user string, broke into codons and placed into a list and stored it as self"""
        totalSeq = inString + inSeq
        codonList = [] #creates empty list
        n=3 
        codonList = [totalSeq[i:i+n] for i in range(0, len(totalSeq), n)] #allows for the input to be split every 3rd value #https://stackoverflow.com/questions/9475241/split-string-every-nth-character
        return codonList
    
    def addSequence (self, inSeq):
        pass
    def aaComposition(self):
        """took self and found each corresponding amino acid for each codon and returned a count of each amino acid present in the sequence"""
        aaList = []
        for [i] in self: #for every codon 
            aa = dnaCodonTable.get(i) #you search for the aa for each codon
            aaList.append(aa) #adds each aa to a list 
        aaString = "" #creates empty string
        aaString = aaString.join(aaList) #converst the list of amino acids to a string #https://www.geeksforgeeks.org/python-program-to-convert-a-list-to-string/
        aaComp = {'A':0, 'C':0, 'D':0, 'E':0, 'F':0, 'G':0, 'H':0, 'I':0, 'L':0, 'K':0, 'M':0, 'N':0, 'P':0, 'Q':0, 'R':0, 'S':0, 'T':0, 'V':0, 'Y':0, 'W':0} 
        charDict = {} #creates empty dictionary 
        for i in aaString: #basically adds for every aa
            if i in charDict:
                charDict[i] += 1
            else:
                charDict[i] = 1
        aaComp.update(charDict) #combines the two dictionaries
        return self.aaComp #returns the final dictonary
    
    def nucComposition(self):
        """took self and took a count of th nucleotides that make up the sequence"""
        codonString = ""
        codonString = codonString.join(self)
        nucComp = {'A':0, 'T':0, 'U':0, ',C':0, 'G':0, 'N':0}
        nucDict = {}
        for i in codonString :
            if i in nucDict:
                nucDict[i] +=1
            else:
                nucDict[i] =1
        nucComp.update(nucDict)
        return self.nucComp
    
    def codonComposition(self):
        subs = 'A', 'T', 'U', 'C', 'G'
        valid = [i for i in self if subs in i]
        codonDict = {}
        for i in valid:
            if i in codonDict:
                codonDict[i] += 1
            else:
                codonDict[i] = 1
        codonComp = codonDict
        return self.codonComp
    
    def nucCount(self):
        return sum(self.nucComp)
